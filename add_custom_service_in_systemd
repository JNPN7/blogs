Systemd is the service and daemon manager. I have explained about systemd in previous blog <link>. Now, after knowing about systemd, it's function you may be wondering can we add our custom made service or daemon. And yes we can add our custom made services similarly to how package manager adds services tho package manager automatically adds services for us. 

Adding service
For adding serivces you need to make a file .service inside the /etc/systemd/system. And that's it boom you added your custom service. Obviously, you need to edit .service file you added. That's pretty easy too. You need to know somethings. Let me explain.
Unit file i.e. serivces file looks like following:
[Unit]
Description=<description about service>
After=<unit file>
Requires=<unit file>
Wants=<unit file>
Conficts=<unit file>
Documentation=<url>

[Service]
Type=<simple, forking, oneshot, notify, dbus>
ExecStart=<path to executable file>
ExecReload=<path to executable file>
ExecStop=<path to executable file>
User=<user>

[Install]
WantedBy=multi-user.target
Alias=<alias>

# unit
In the unit section, we have some option which are
1. Description: Here we can add some description regarding the service which gets output while checking status.
2. After: It consists of list of units. The unit starts only after units specified here are active.
3. Requires: It consists of list of dependencies units. If any units listed here fails to start, the unit is not activated.
3. Wants: It consists of list of weak dependencies units. If any units listed here fails it doesn't affect the unit on activation but it's better the units listed are active
4. Conficts: It is opposite to Requires i.e. any units listed here shouldn't be active

# service section
In the service section, we have some option which are
1. Type: Here we specify the type of service. Simple, forking, oneshot, notify, dbus are types of service.
2. ExecStart: Here we specify the path of script which runs while starting.
3. ExecReload: Here we specify the path of script which runs while reloading.
4. ExecStop: Here we specify the path of script which runs while stoping.
5. User: Here we specify user who can start, stop, control this service.

# Install section
In install section, we have following option:
1. WantedBy: Consits a list of units that weakly depend on the unit. Tells when to sart service and create symlinks between targes and its dependant unit. Whe you don't know the which target to use, just use multi-user.target.
2. Alias: We specify the alias of the unit

# Demonstartion
Now, for the demonstartion, I have created a daemon that simply saves the date every 3 second.
<code>

Then, I have added the .service file inside /etc/systemd/system.
<code>

Now, you just need to reload systemctl daemon which can be done by following command
And, that's it I have added my custom created daemon in systemd
To enable the service:
<code>

The work done by the service:
<ss>

# Conclusion
Now, I assume you know how to add custom service to the systemd. This comes very handy for the system administrator also you can implement in your desktop.
